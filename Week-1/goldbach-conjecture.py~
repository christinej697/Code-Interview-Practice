import math

def goldbach_conjecture(n: int) -> str:

    prime_list = []
    for i in range(1, n+1):
        if check_prime(i):
            prime_list.append(i)
    
    for i in prime_list:
        for j in prime_list:
            if (i + j) == n:
                return i + " + " + j + " = " + n

    return "Nope"

def check_prime(n: int) -> str:

    # 2 is the only prime even number
    if (n > 2):
        if ((n % 2) == 0):
            return False
        else:
            # only need to check these, because at most a number is a multiple of itself
            for i in range(2, int(math.sqrt(n))+1):
                #print(i)
                #print("% ->", n%i)
                if ((n % i) == 0):
                    return False
            return True
    else:
       return True

if __name__ == '__main__':

    print("3:", goldbach_conjecture(3))
    print("4:", goldbach_conjecture(4))
    print("13", goldbach_conjecture(13))
    print("14", goldbach_conjecture(14))
    print("15", goldbach_conjecture(15))

